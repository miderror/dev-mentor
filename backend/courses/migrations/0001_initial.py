# Generated by Django 5.2.5 on 2025-08-26 16:45

import backend.courses.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, unique=True, verbose_name='Название курса')),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курсы',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название модуля')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='courses.course', verbose_name='Курс')),
            ],
            options={
                'verbose_name': 'Модуль',
                'verbose_name_plural': 'Модули',
                'ordering': ['course', 'order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='DifficultyLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Уровень сложности')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='levels', to='courses.module', verbose_name='Модуль')),
            ],
            options={
                'verbose_name': 'Уровень сложности',
                'verbose_name_plural': 'Уровни сложности',
                'ordering': ['module', 'order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(verbose_name='Номер задачи')),
                ('title', models.CharField(max_length=255, verbose_name='Название задачи')),
                ('description', models.TextField(help_text='Поддерживает форматирование Markdown для отображения в боте.', verbose_name='Описание задачи (Markdown)')),
                ('image', models.ImageField(blank=True, help_text='Опциональное изображение, которое будет показано вместе с описанием.', null=True, upload_to='tasks_images/', verbose_name='Изображение к задаче')),
                ('tests', models.JSONField(default=backend.courses.models.get_default_task_tests, help_text='JSON-объект со списком тестов. Формат: {"tests": [{"input": [...], "expected": ...}]}', verbose_name='Проверочные тесты (JSON)')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='courses.difficultylevel', verbose_name='Уровень')),
            ],
            options={
                'verbose_name': 'Задача',
                'verbose_name_plural': 'Задачи',
                'ordering': ['level', 'number'],
            },
        ),
        migrations.CreateModel(
            name='UserTaskStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('NOT_ATTEMPTED', 'Не решена'), ('SOLVED', 'Решена')], default='NOT_ATTEMPTED', max_length=20, verbose_name='Статус')),
                ('solved_at', models.DateTimeField(blank=True, null=True, verbose_name='Время решения')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_statuses', to='courses.task', verbose_name='Задача')),
            ],
            options={
                'verbose_name': 'Статус решения задачи',
                'verbose_name_plural': 'Статусы решений задач',
            },
        ),
    ]
